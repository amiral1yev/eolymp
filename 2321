def heapify(lst, n, i): # n is size of heap
  largest = 0
  l = 2 * i      # left = 2*i
  r = 2 * i + 1  # right = 2*i + 1
  if l <= n and lst[l] > lst[i]: largest = l
  else: largest = i
  if r <= n and lst[r] > lst[largest]: largest = r

  if largest != i:
    lst[i], lst[largest] = lst[largest], lst[i]  # swap
    heapify(lst, n, largest)

def BuildHeap(lst, n):
  for i in range(n // 2, 0, -1):
    heapify(lst, n, i)

def heapSort(lst, n):
  BuildHeap(lst, n)
  for i in range(n, 1, -1):
    lst[i], lst[1] = lst[1], lst[i]  # swap
    heapify(lst, i - 1, 1)

n = int(input())
lst = list(map(int,input().split()))
lst = [0] + lst

heapSort(lst, n)

for i in range(1,n+1):
  print(lst[i], end = " ")
